# config/packages/security.yaml
security:
    role_hierarchy:
        ROLE_READER: ROLE_USER
        ROLE_ADMIN: ROLE_ADMIN
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            # provider that you set earlier inside providers
            provider: app_user_provider
            form_login:
                # "app_login" is the name of the route created previously
                login_path: app_login
                check_path: app_login
                target_path_parameter: accueil
                default_target_path: accueil
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/contacter, roles: ROLE_USER }
    - { path: ^/profile, roles: ROLE_USER }
    - { path: ^/notifications, roles: ROLE_USER }
    - { path: ^/recette, roles: ROLE_ADMIN }

